apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.global.namespace }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
  template:
    metadata:
      name: {{ .Chart.Name }}
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/version: "{{ .Values.version }}"
        app.kubernetes.io/component: elasticsearch
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: {{ .Chart.Name }}
          image: "elastic/elasticsearch:{{ .Values.version }}"
          ports:
            - name: http
              containerPort: {{ .Values.ports.http }}
            - name: communication
              containerPort: {{ .Values.ports.communication }}
          volumeMounts:
            - name: {{ .Chart.Name }}-configmap-volume
              mountPath: /usr/share/elasticsearch/config/users
              subPath: users
            - name: {{ .Chart.Name }}-configmap-volume
              mountPath: /usr/share/elasticsearch/config/users_roles
              subPath: users_roles
            - name: {{ .Chart.Name }}-data-volume
              mountPath: /usr/share/elasticsearch/data
          env:
            - name: cluster.name
              value: k8s-logs
            - name: node.name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: discovery.type
              value: "single-node"
            - name: xpack.security.enabled
              value: "true"
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
      volumes:
        - name: {{ .Chart.Name }}-data-volume
        - name: {{ .Chart.Name }}-configmap-volume
          configMap:
            name: {{ .Chart.Name }}-configmap
